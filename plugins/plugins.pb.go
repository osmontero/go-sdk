// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: plugins.proto

package plugins

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/empty.proto.

type Empty = emptypb.Empty

// Symbols defined in public import of google/protobuf/struct.proto.

type NullValue = structpb.NullValue

const NullValue_NULL_VALUE = structpb.NullValue_NULL_VALUE

var NullValue_name = structpb.NullValue_name
var NullValue_value = structpb.NullValue_value

type Struct = structpb.Struct
type Value = structpb.Value
type Value_NullValue = structpb.Value_NullValue
type Value_NumberValue = structpb.Value_NumberValue
type Value_StringValue = structpb.Value_StringValue
type Value_BoolValue = structpb.Value_BoolValue
type Value_StructValue = structpb.Value_StructValue
type Value_ListValue = structpb.Value_ListValue
type ListValue = structpb.ListValue

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,json=@timestamp,proto3" json:"timestamp,omitempty"`
	Topic         string                 `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_plugins_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastId        string                 `protobuf:"bytes,1,opt,name=lastId,proto3" json:"lastId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_plugins_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{1}
}

func (x *Ack) GetLastId() string {
	if x != nil {
		return x.LastId
	}
	return ""
}

type Alert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp     string                 `protobuf:"bytes,2,opt,name=timestamp,json=@timestamp,proto3" json:"timestamp,omitempty"`
	LastUpdate    string                 `protobuf:"bytes,3,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	TenantId      string                 `protobuf:"bytes,5,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	TenantName    string                 `protobuf:"bytes,6,opt,name=tenantName,proto3" json:"tenantName,omitempty"`
	DataSource    string                 `protobuf:"bytes,7,opt,name=dataSource,proto3" json:"dataSource,omitempty"`
	DataType      string                 `protobuf:"bytes,8,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Category      string                 `protobuf:"bytes,9,opt,name=category,proto3" json:"category,omitempty"`
	Technique     string                 `protobuf:"bytes,10,opt,name=technique,proto3" json:"technique,omitempty"`
	Description   string                 `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	References    []string               `protobuf:"bytes,12,rep,name=references,proto3" json:"references,omitempty"`
	Impact        *Impact                `protobuf:"bytes,13,opt,name=impact,proto3" json:"impact,omitempty"`
	ImpactScore   uint32                 `protobuf:"varint,14,opt,name=impactScore,proto3" json:"impactScore,omitempty"`
	Severity      string                 `protobuf:"bytes,15,opt,name=severity,proto3" json:"severity,omitempty"`
	Adversary     *Side                  `protobuf:"bytes,16,opt,name=adversary,proto3" json:"adversary,omitempty"`
	Target        *Side                  `protobuf:"bytes,17,opt,name=target,proto3" json:"target,omitempty"`
	Events        []*Event               `protobuf:"bytes,18,rep,name=events,proto3" json:"events,omitempty"`
	DeduplicateBy []string               `protobuf:"bytes,19,rep,name=deduplicateBy,proto3" json:"deduplicateBy,omitempty"`
	Errors        []string               `protobuf:"bytes,20,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Alert) Reset() {
	*x = Alert{}
	mi := &file_plugins_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Alert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alert) ProtoMessage() {}

func (x *Alert) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alert.ProtoReflect.Descriptor instead.
func (*Alert) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{2}
}

func (x *Alert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Alert) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Alert) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

func (x *Alert) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Alert) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Alert) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *Alert) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *Alert) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Alert) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Alert) GetTechnique() string {
	if x != nil {
		return x.Technique
	}
	return ""
}

func (x *Alert) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Alert) GetReferences() []string {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *Alert) GetImpact() *Impact {
	if x != nil {
		return x.Impact
	}
	return nil
}

func (x *Alert) GetImpactScore() uint32 {
	if x != nil {
		return x.ImpactScore
	}
	return 0
}

func (x *Alert) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Alert) GetAdversary() *Side {
	if x != nil {
		return x.Adversary
	}
	return nil
}

func (x *Alert) GetTarget() *Side {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Alert) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Alert) GetDeduplicateBy() []string {
	if x != nil {
		return x.DeduplicateBy
	}
	return nil
}

func (x *Alert) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Impact struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Confidentiality uint32                 `protobuf:"varint,1,opt,name=confidentiality,proto3" json:"confidentiality,omitempty"`
	Integrity       uint32                 `protobuf:"varint,2,opt,name=integrity,proto3" json:"integrity,omitempty"`
	Availability    uint32                 `protobuf:"varint,3,opt,name=availability,proto3" json:"availability,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Impact) Reset() {
	*x = Impact{}
	mi := &file_plugins_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Impact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Impact) ProtoMessage() {}

func (x *Impact) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Impact.ProtoReflect.Descriptor instead.
func (*Impact) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{3}
}

func (x *Impact) GetConfidentiality() uint32 {
	if x != nil {
		return x.Confidentiality
	}
	return 0
}

func (x *Impact) GetIntegrity() uint32 {
	if x != nil {
		return x.Integrity
	}
	return 0
}

func (x *Impact) GetAvailability() uint32 {
	if x != nil {
		return x.Availability
	}
	return 0
}

type Event struct {
	state            protoimpl.MessageState       `protogen:"open.v1"`
	Id               string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp        string                       `protobuf:"bytes,2,opt,name=timestamp,json=@timestamp,proto3" json:"timestamp,omitempty"`
	DeviceTime       string                       `protobuf:"bytes,3,opt,name=deviceTime,proto3" json:"deviceTime,omitempty"`
	DataType         string                       `protobuf:"bytes,4,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DataSource       string                       `protobuf:"bytes,5,opt,name=dataSource,proto3" json:"dataSource,omitempty"`
	TenantId         string                       `protobuf:"bytes,6,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	TenantName       string                       `protobuf:"bytes,7,opt,name=tenantName,proto3" json:"tenantName,omitempty"`
	Raw              string                       `protobuf:"bytes,8,opt,name=raw,proto3" json:"raw,omitempty"`
	Log              map[string]*structpb.Value   `protobuf:"bytes,9,rep,name=log,proto3" json:"log,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Target           *Side                        `protobuf:"bytes,10,opt,name=target,proto3" json:"target,omitempty"`
	Origin           *Side                        `protobuf:"bytes,11,opt,name=origin,proto3" json:"origin,omitempty"`
	Protocol         string                       `protobuf:"bytes,12,opt,name=protocol,proto3" json:"protocol,omitempty"`
	ConnectionStatus string                       `protobuf:"bytes,13,opt,name=connectionStatus,proto3" json:"connectionStatus,omitempty"`
	StatusCode       uint32                       `protobuf:"varint,14,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	ActionResult     string                       `protobuf:"bytes,15,opt,name=actionResult,proto3" json:"actionResult,omitempty"`
	Action           string                       `protobuf:"bytes,16,opt,name=action,proto3" json:"action,omitempty"`
	Severity         string                       `protobuf:"bytes,17,opt,name=severity,proto3" json:"severity,omitempty"`
	Errors           []string                     `protobuf:"bytes,18,rep,name=errors,proto3" json:"errors,omitempty"`
	Compliance       map[string]*ComplianceValues `protobuf:"bytes,19,rep,name=compliance,proto3" json:"compliance,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_plugins_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{4}
}

func (x *Event) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Event) GetDeviceTime() string {
	if x != nil {
		return x.DeviceTime
	}
	return ""
}

func (x *Event) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Event) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *Event) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Event) GetTenantName() string {
	if x != nil {
		return x.TenantName
	}
	return ""
}

func (x *Event) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

func (x *Event) GetLog() map[string]*structpb.Value {
	if x != nil {
		return x.Log
	}
	return nil
}

func (x *Event) GetTarget() *Side {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Event) GetOrigin() *Side {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Event) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Event) GetConnectionStatus() string {
	if x != nil {
		return x.ConnectionStatus
	}
	return ""
}

func (x *Event) GetStatusCode() uint32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Event) GetActionResult() string {
	if x != nil {
		return x.ActionResult
	}
	return ""
}

func (x *Event) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Event) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *Event) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *Event) GetCompliance() map[string]*ComplianceValues {
	if x != nil {
		return x.Compliance
	}
	return nil
}

type ComplianceValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComplianceValues) Reset() {
	*x = ComplianceValues{}
	mi := &file_plugins_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComplianceValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplianceValues) ProtoMessage() {}

func (x *ComplianceValues) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplianceValues.ProtoReflect.Descriptor instead.
func (*ComplianceValues) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{5}
}

func (x *ComplianceValues) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type Side struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Network traffic attributes
	BytesSent        float64 `protobuf:"fixed64,1,opt,name=bytesSent,proto3" json:"bytesSent,omitempty"`
	BytesReceived    float64 `protobuf:"fixed64,2,opt,name=bytesReceived,proto3" json:"bytesReceived,omitempty"`
	PackagesSent     uint64  `protobuf:"varint,3,opt,name=packagesSent,proto3" json:"packagesSent,omitempty"`
	PackagesReceived uint64  `protobuf:"varint,4,opt,name=packagesReceived,proto3" json:"packagesReceived,omitempty"`
	// Network identification attributes
	Ip          string       `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	Host        string       `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	User        string       `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`
	Group       string       `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
	Port        uint32       `protobuf:"varint,9,opt,name=port,proto3" json:"port,omitempty"`
	Domain      string       `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	Mac         string       `protobuf:"bytes,11,opt,name=mac,proto3" json:"mac,omitempty"`
	Geolocation *Geolocation `protobuf:"bytes,12,opt,name=geolocation,proto3" json:"geolocation,omitempty"`
	Url         string       `protobuf:"bytes,13,opt,name=url,proto3" json:"url,omitempty"`
	Cidr        string       `protobuf:"bytes,14,opt,name=cidr,proto3" json:"cidr,omitempty"`
	// Certificate and fingerprint attributes
	CertificateFingerprint string `protobuf:"bytes,15,opt,name=certificateFingerprint,proto3" json:"certificateFingerprint,omitempty"`
	Ja3Fingerprint         string `protobuf:"bytes,16,opt,name=ja3Fingerprint,proto3" json:"ja3Fingerprint,omitempty"`
	JarmFingerprint        string `protobuf:"bytes,17,opt,name=jarmFingerprint,proto3" json:"jarmFingerprint,omitempty"`
	SshBanner              string `protobuf:"bytes,18,opt,name=sshBanner,proto3" json:"sshBanner,omitempty"`
	SshFingerprint         string `protobuf:"bytes,19,opt,name=sshFingerprint,proto3" json:"sshFingerprint,omitempty"`
	// Web attributes
	Cookie   string `protobuf:"bytes,20,opt,name=cookie,proto3" json:"cookie,omitempty"`
	JabberId string `protobuf:"bytes,21,opt,name=jabberId,proto3" json:"jabberId,omitempty"`
	// Email attributes
	Email            string `protobuf:"bytes,22,opt,name=email,proto3" json:"email,omitempty"`
	Dkim             string `protobuf:"bytes,23,opt,name=dkim,proto3" json:"dkim,omitempty"`
	DkimSignature    string `protobuf:"bytes,24,opt,name=dkimSignature,proto3" json:"dkimSignature,omitempty"`
	EmailAddress     string `protobuf:"bytes,25,opt,name=emailAddress,proto3" json:"emailAddress,omitempty"`
	EmailBody        string `protobuf:"bytes,26,opt,name=emailBody,proto3" json:"emailBody,omitempty"`
	EmailDisplayName string `protobuf:"bytes,27,opt,name=emailDisplayName,proto3" json:"emailDisplayName,omitempty"`
	EmailSubject     string `protobuf:"bytes,28,opt,name=emailSubject,proto3" json:"emailSubject,omitempty"`
	EmailThreadIndex string `protobuf:"bytes,29,opt,name=emailThreadIndex,proto3" json:"emailThreadIndex,omitempty"`
	EmailXMailer     string `protobuf:"bytes,30,opt,name=emailXMailer,proto3" json:"emailXMailer,omitempty"`
	// WHOIS attributes
	WhoisRegistrant string `protobuf:"bytes,31,opt,name=whoisRegistrant,proto3" json:"whoisRegistrant,omitempty"`
	WhoisRegistrar  string `protobuf:"bytes,32,opt,name=whoisRegistrar,proto3" json:"whoisRegistrar,omitempty"`
	// Process-related attributes
	Process                   string `protobuf:"bytes,33,opt,name=process,proto3" json:"process,omitempty"`
	ProcessState              string `protobuf:"bytes,34,opt,name=processState,proto3" json:"processState,omitempty"`
	Command                   string `protobuf:"bytes,35,opt,name=command,proto3" json:"command,omitempty"`
	WindowsScheduledTask      string `protobuf:"bytes,36,opt,name=windowsScheduledTask,proto3" json:"windowsScheduledTask,omitempty"`
	WindowsServiceDisplayName string `protobuf:"bytes,37,opt,name=windowsServiceDisplayName,proto3" json:"windowsServiceDisplayName,omitempty"`
	WindowsServiceName        string `protobuf:"bytes,38,opt,name=windowsServiceName,proto3" json:"windowsServiceName,omitempty"`
	// File-related attributes
	File        string `protobuf:"bytes,39,opt,name=file,proto3" json:"file,omitempty"`
	Path        string `protobuf:"bytes,40,opt,name=path,proto3" json:"path,omitempty"`
	Filename    string `protobuf:"bytes,41,opt,name=filename,proto3" json:"filename,omitempty"`
	SizeInBytes string `protobuf:"bytes,42,opt,name=sizeInBytes,proto3" json:"sizeInBytes,omitempty"`
	MimeType    string `protobuf:"bytes,43,opt,name=mimeType,proto3" json:"mimeType,omitempty"`
	// Hash-related attributes
	Hash         string `protobuf:"bytes,44,opt,name=hash,proto3" json:"hash,omitempty"`
	Authentihash string `protobuf:"bytes,45,opt,name=authentihash,proto3" json:"authentihash,omitempty"`
	Cdhash       string `protobuf:"bytes,46,opt,name=cdhash,proto3" json:"cdhash,omitempty"`
	Md5          string `protobuf:"bytes,47,opt,name=md5,proto3" json:"md5,omitempty"`
	Sha1         string `protobuf:"bytes,48,opt,name=sha1,proto3" json:"sha1,omitempty"`
	Sha224       string `protobuf:"bytes,49,opt,name=sha224,proto3" json:"sha224,omitempty"`
	Sha256       string `protobuf:"bytes,50,opt,name=sha256,proto3" json:"sha256,omitempty"`
	Sha384       string `protobuf:"bytes,51,opt,name=sha384,proto3" json:"sha384,omitempty"`
	Sha3224      string `protobuf:"bytes,52,opt,name=sha3224,proto3" json:"sha3224,omitempty"`
	Sha3256      string `protobuf:"bytes,53,opt,name=sha3256,proto3" json:"sha3256,omitempty"`
	Sha3384      string `protobuf:"bytes,54,opt,name=sha3384,proto3" json:"sha3384,omitempty"`
	Sha3512      string `protobuf:"bytes,55,opt,name=sha3512,proto3" json:"sha3512,omitempty"`
	Sha512       string `protobuf:"bytes,56,opt,name=sha512,proto3" json:"sha512,omitempty"`
	Sha512224    string `protobuf:"bytes,57,opt,name=sha512224,proto3" json:"sha512224,omitempty"`
	Sha512256    string `protobuf:"bytes,58,opt,name=sha512256,proto3" json:"sha512256,omitempty"`
	Hex          string `protobuf:"bytes,59,opt,name=hex,proto3" json:"hex,omitempty"`
	Base64       string `protobuf:"bytes,60,opt,name=base64,proto3" json:"base64,omitempty"`
	// System-related attributes
	OperatingSystem string `protobuf:"bytes,61,opt,name=operatingSystem,proto3" json:"operatingSystem,omitempty"`
	ChromeExtension string `protobuf:"bytes,62,opt,name=chromeExtension,proto3" json:"chromeExtension,omitempty"`
	MobileAppId     string `protobuf:"bytes,63,opt,name=mobileAppId,proto3" json:"mobileAppId,omitempty"`
	// Vulnerability-related attributes
	Cpe string `protobuf:"bytes,64,opt,name=cpe,proto3" json:"cpe,omitempty"`
	Cve string `protobuf:"bytes,65,opt,name=cve,proto3" json:"cve,omitempty"`
	// Malware-related attributes
	Malware       string `protobuf:"bytes,66,opt,name=malware,proto3" json:"malware,omitempty"`
	MalwareFamily string `protobuf:"bytes,67,opt,name=malwareFamily,proto3" json:"malwareFamily,omitempty"`
	MalwareType   string `protobuf:"bytes,68,opt,name=malwareType,proto3" json:"malwareType,omitempty"`
	// Key-related attributes
	PgpPrivateKey string `protobuf:"bytes,69,opt,name=pgpPrivateKey,proto3" json:"pgpPrivateKey,omitempty"`
	PgpPublicKey  string `protobuf:"bytes,70,opt,name=pgpPublicKey,proto3" json:"pgpPublicKey,omitempty"`
	// Resources attributes
	Connections    uint64      `protobuf:"varint,71,opt,name=connections,proto3" json:"connections,omitempty"`
	UsedCpuPercent uint32      `protobuf:"varint,72,opt,name=usedCpuPercent,proto3" json:"usedCpuPercent,omitempty"`
	UsedMemPercent uint32      `protobuf:"varint,73,opt,name=usedMemPercent,proto3" json:"usedMemPercent,omitempty"`
	TotalCpuUnits  uint32      `protobuf:"varint,74,opt,name=totalCpuUnits,proto3" json:"totalCpuUnits,omitempty"`
	TotalMem       uint64      `protobuf:"varint,75,opt,name=totalMem,proto3" json:"totalMem,omitempty"`
	Disks          []*DiskInfo `protobuf:"bytes,76,rep,name=disks,proto3" json:"disks,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Side) Reset() {
	*x = Side{}
	mi := &file_plugins_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Side) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Side) ProtoMessage() {}

func (x *Side) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Side.ProtoReflect.Descriptor instead.
func (*Side) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{6}
}

func (x *Side) GetBytesSent() float64 {
	if x != nil {
		return x.BytesSent
	}
	return 0
}

func (x *Side) GetBytesReceived() float64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *Side) GetPackagesSent() uint64 {
	if x != nil {
		return x.PackagesSent
	}
	return 0
}

func (x *Side) GetPackagesReceived() uint64 {
	if x != nil {
		return x.PackagesReceived
	}
	return 0
}

func (x *Side) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Side) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Side) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Side) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Side) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Side) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Side) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *Side) GetGeolocation() *Geolocation {
	if x != nil {
		return x.Geolocation
	}
	return nil
}

func (x *Side) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Side) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Side) GetCertificateFingerprint() string {
	if x != nil {
		return x.CertificateFingerprint
	}
	return ""
}

func (x *Side) GetJa3Fingerprint() string {
	if x != nil {
		return x.Ja3Fingerprint
	}
	return ""
}

func (x *Side) GetJarmFingerprint() string {
	if x != nil {
		return x.JarmFingerprint
	}
	return ""
}

func (x *Side) GetSshBanner() string {
	if x != nil {
		return x.SshBanner
	}
	return ""
}

func (x *Side) GetSshFingerprint() string {
	if x != nil {
		return x.SshFingerprint
	}
	return ""
}

func (x *Side) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

func (x *Side) GetJabberId() string {
	if x != nil {
		return x.JabberId
	}
	return ""
}

func (x *Side) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Side) GetDkim() string {
	if x != nil {
		return x.Dkim
	}
	return ""
}

func (x *Side) GetDkimSignature() string {
	if x != nil {
		return x.DkimSignature
	}
	return ""
}

func (x *Side) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *Side) GetEmailBody() string {
	if x != nil {
		return x.EmailBody
	}
	return ""
}

func (x *Side) GetEmailDisplayName() string {
	if x != nil {
		return x.EmailDisplayName
	}
	return ""
}

func (x *Side) GetEmailSubject() string {
	if x != nil {
		return x.EmailSubject
	}
	return ""
}

func (x *Side) GetEmailThreadIndex() string {
	if x != nil {
		return x.EmailThreadIndex
	}
	return ""
}

func (x *Side) GetEmailXMailer() string {
	if x != nil {
		return x.EmailXMailer
	}
	return ""
}

func (x *Side) GetWhoisRegistrant() string {
	if x != nil {
		return x.WhoisRegistrant
	}
	return ""
}

func (x *Side) GetWhoisRegistrar() string {
	if x != nil {
		return x.WhoisRegistrar
	}
	return ""
}

func (x *Side) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *Side) GetProcessState() string {
	if x != nil {
		return x.ProcessState
	}
	return ""
}

func (x *Side) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Side) GetWindowsScheduledTask() string {
	if x != nil {
		return x.WindowsScheduledTask
	}
	return ""
}

func (x *Side) GetWindowsServiceDisplayName() string {
	if x != nil {
		return x.WindowsServiceDisplayName
	}
	return ""
}

func (x *Side) GetWindowsServiceName() string {
	if x != nil {
		return x.WindowsServiceName
	}
	return ""
}

func (x *Side) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Side) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Side) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Side) GetSizeInBytes() string {
	if x != nil {
		return x.SizeInBytes
	}
	return ""
}

func (x *Side) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Side) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Side) GetAuthentihash() string {
	if x != nil {
		return x.Authentihash
	}
	return ""
}

func (x *Side) GetCdhash() string {
	if x != nil {
		return x.Cdhash
	}
	return ""
}

func (x *Side) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *Side) GetSha1() string {
	if x != nil {
		return x.Sha1
	}
	return ""
}

func (x *Side) GetSha224() string {
	if x != nil {
		return x.Sha224
	}
	return ""
}

func (x *Side) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *Side) GetSha384() string {
	if x != nil {
		return x.Sha384
	}
	return ""
}

func (x *Side) GetSha3224() string {
	if x != nil {
		return x.Sha3224
	}
	return ""
}

func (x *Side) GetSha3256() string {
	if x != nil {
		return x.Sha3256
	}
	return ""
}

func (x *Side) GetSha3384() string {
	if x != nil {
		return x.Sha3384
	}
	return ""
}

func (x *Side) GetSha3512() string {
	if x != nil {
		return x.Sha3512
	}
	return ""
}

func (x *Side) GetSha512() string {
	if x != nil {
		return x.Sha512
	}
	return ""
}

func (x *Side) GetSha512224() string {
	if x != nil {
		return x.Sha512224
	}
	return ""
}

func (x *Side) GetSha512256() string {
	if x != nil {
		return x.Sha512256
	}
	return ""
}

func (x *Side) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *Side) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

func (x *Side) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *Side) GetChromeExtension() string {
	if x != nil {
		return x.ChromeExtension
	}
	return ""
}

func (x *Side) GetMobileAppId() string {
	if x != nil {
		return x.MobileAppId
	}
	return ""
}

func (x *Side) GetCpe() string {
	if x != nil {
		return x.Cpe
	}
	return ""
}

func (x *Side) GetCve() string {
	if x != nil {
		return x.Cve
	}
	return ""
}

func (x *Side) GetMalware() string {
	if x != nil {
		return x.Malware
	}
	return ""
}

func (x *Side) GetMalwareFamily() string {
	if x != nil {
		return x.MalwareFamily
	}
	return ""
}

func (x *Side) GetMalwareType() string {
	if x != nil {
		return x.MalwareType
	}
	return ""
}

func (x *Side) GetPgpPrivateKey() string {
	if x != nil {
		return x.PgpPrivateKey
	}
	return ""
}

func (x *Side) GetPgpPublicKey() string {
	if x != nil {
		return x.PgpPublicKey
	}
	return ""
}

func (x *Side) GetConnections() uint64 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *Side) GetUsedCpuPercent() uint32 {
	if x != nil {
		return x.UsedCpuPercent
	}
	return 0
}

func (x *Side) GetUsedMemPercent() uint32 {
	if x != nil {
		return x.UsedMemPercent
	}
	return 0
}

func (x *Side) GetTotalCpuUnits() uint32 {
	if x != nil {
		return x.TotalCpuUnits
	}
	return 0
}

func (x *Side) GetTotalMem() uint64 {
	if x != nil {
		return x.TotalMem
	}
	return 0
}

func (x *Side) GetDisks() []*DiskInfo {
	if x != nil {
		return x.Disks
	}
	return nil
}

type DiskInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TotalSpace    uint64                 `protobuf:"varint,2,opt,name=totalSpace,proto3" json:"totalSpace,omitempty"`
	UsedPercent   uint32                 `protobuf:"varint,3,opt,name=usedPercent,proto3" json:"usedPercent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskInfo) Reset() {
	*x = DiskInfo{}
	mi := &file_plugins_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskInfo) ProtoMessage() {}

func (x *DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskInfo.ProtoReflect.Descriptor instead.
func (*DiskInfo) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{7}
}

func (x *DiskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskInfo) GetTotalSpace() uint64 {
	if x != nil {
		return x.TotalSpace
	}
	return 0
}

func (x *DiskInfo) GetUsedPercent() uint32 {
	if x != nil {
		return x.UsedPercent
	}
	return 0
}

type Geolocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Country       string                 `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Latitude      float64                `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Asn           uint64                 `protobuf:"varint,5,opt,name=asn,proto3" json:"asn,omitempty"`
	Aso           string                 `protobuf:"bytes,6,opt,name=aso,proto3" json:"aso,omitempty"`
	CountryCode   string                 `protobuf:"bytes,7,opt,name=countryCode,proto3" json:"countryCode,omitempty"`
	Accuracy      uint32                 `protobuf:"varint,8,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Geolocation) Reset() {
	*x = Geolocation{}
	mi := &file_plugins_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Geolocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geolocation) ProtoMessage() {}

func (x *Geolocation) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geolocation.ProtoReflect.Descriptor instead.
func (*Geolocation) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{8}
}

func (x *Geolocation) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Geolocation) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Geolocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Geolocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Geolocation) GetAsn() uint64 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *Geolocation) GetAso() string {
	if x != nil {
		return x.Aso
	}
	return ""
}

func (x *Geolocation) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Geolocation) GetAccuracy() uint32 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DataType      string                 `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	DataSource    string                 `protobuf:"bytes,3,opt,name=dataSource,proto3" json:"dataSource,omitempty"`
	Timestamp     string                 `protobuf:"bytes,4,opt,name=timestamp,json=@timestamp,proto3" json:"timestamp,omitempty"`
	TenantId      string                 `protobuf:"bytes,5,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
	Raw           string                 `protobuf:"bytes,6,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_plugins_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{9}
}

func (x *Log) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Log) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Log) GetDataSource() string {
	if x != nil {
		return x.DataSource
	}
	return ""
}

func (x *Log) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Log) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Log) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type Draft struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Log           string                 `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Logs          []string               `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	Step          uint32                 `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
	Pipeline      uint32                 `protobuf:"varint,4,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	Errors        []string               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Draft) Reset() {
	*x = Draft{}
	mi := &file_plugins_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Draft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Draft) ProtoMessage() {}

func (x *Draft) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Draft.ProtoReflect.Descriptor instead.
func (*Draft) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{10}
}

func (x *Draft) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *Draft) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Draft) GetStep() uint32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *Draft) GetPipeline() uint32 {
	if x != nil {
		return x.Pipeline
	}
	return 0
}

func (x *Draft) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Transform struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draft         *Draft                 `protobuf:"bytes,1,opt,name=draft,proto3" json:"draft,omitempty"`
	Step          *Step                  `protobuf:"bytes,2,opt,name=step,proto3" json:"step,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transform) Reset() {
	*x = Transform{}
	mi := &file_plugins_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transform) ProtoMessage() {}

func (x *Transform) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transform.ProtoReflect.Descriptor instead.
func (*Transform) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{11}
}

func (x *Transform) GetDraft() *Draft {
	if x != nil {
		return x.Draft
	}
	return nil
}

func (x *Transform) GetStep() *Step {
	if x != nil {
		return x.Step
	}
	return nil
}

type Step struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kv            *Kv                    `protobuf:"bytes,1,opt,name=kv,proto3" json:"kv,omitempty"`
	Grok          *Grok                  `protobuf:"bytes,2,opt,name=grok,proto3" json:"grok,omitempty"`
	Trim          *Trim                  `protobuf:"bytes,3,opt,name=trim,proto3" json:"trim,omitempty"`
	Json          *Json                  `protobuf:"bytes,4,opt,name=json,proto3" json:"json,omitempty"`
	Csv           *Csv                   `protobuf:"bytes,5,opt,name=csv,proto3" json:"csv,omitempty"`
	Rename        *Rename                `protobuf:"bytes,6,opt,name=rename,proto3" json:"rename,omitempty"`
	Cast          *Cast                  `protobuf:"bytes,7,opt,name=cast,proto3" json:"cast,omitempty"`
	Reformat      *Reformat              `protobuf:"bytes,8,opt,name=reformat,proto3" json:"reformat,omitempty"`
	Delete        *Delete                `protobuf:"bytes,9,opt,name=delete,proto3" json:"delete,omitempty"`
	Drop          *Drop                  `protobuf:"bytes,10,opt,name=drop,proto3" json:"drop,omitempty"`
	Add           *Add                   `protobuf:"bytes,11,opt,name=add,proto3" json:"add,omitempty"`
	Dynamic       *Dynamic               `protobuf:"bytes,12,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	Expand        *Expand                `protobuf:"bytes,13,opt,name=expand,proto3" json:"expand,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Step) Reset() {
	*x = Step{}
	mi := &file_plugins_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{12}
}

func (x *Step) GetKv() *Kv {
	if x != nil {
		return x.Kv
	}
	return nil
}

func (x *Step) GetGrok() *Grok {
	if x != nil {
		return x.Grok
	}
	return nil
}

func (x *Step) GetTrim() *Trim {
	if x != nil {
		return x.Trim
	}
	return nil
}

func (x *Step) GetJson() *Json {
	if x != nil {
		return x.Json
	}
	return nil
}

func (x *Step) GetCsv() *Csv {
	if x != nil {
		return x.Csv
	}
	return nil
}

func (x *Step) GetRename() *Rename {
	if x != nil {
		return x.Rename
	}
	return nil
}

func (x *Step) GetCast() *Cast {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *Step) GetReformat() *Reformat {
	if x != nil {
		return x.Reformat
	}
	return nil
}

func (x *Step) GetDelete() *Delete {
	if x != nil {
		return x.Delete
	}
	return nil
}

func (x *Step) GetDrop() *Drop {
	if x != nil {
		return x.Drop
	}
	return nil
}

func (x *Step) GetAdd() *Add {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *Step) GetDynamic() *Dynamic {
	if x != nil {
		return x.Dynamic
	}
	return nil
}

func (x *Step) GetExpand() *Expand {
	if x != nil {
		return x.Expand
	}
	return nil
}

type Dynamic struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Plugin        string                     `protobuf:"bytes,1,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Params        map[string]*structpb.Value `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Where         string                     `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dynamic) Reset() {
	*x = Dynamic{}
	mi := &file_plugins_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dynamic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dynamic) ProtoMessage() {}

func (x *Dynamic) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dynamic.ProtoReflect.Descriptor instead.
func (*Dynamic) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{13}
}

func (x *Dynamic) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *Dynamic) GetParams() map[string]*structpb.Value {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Dynamic) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Reformat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Function      string                 `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	FromFormat    string                 `protobuf:"bytes,3,opt,name=fromFormat,proto3" json:"fromFormat,omitempty"`
	ToFormat      string                 `protobuf:"bytes,4,opt,name=toFormat,proto3" json:"toFormat,omitempty"`
	Where         string                 `protobuf:"bytes,5,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Reformat) Reset() {
	*x = Reformat{}
	mi := &file_plugins_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reformat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reformat) ProtoMessage() {}

func (x *Reformat) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reformat.ProtoReflect.Descriptor instead.
func (*Reformat) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{14}
}

func (x *Reformat) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Reformat) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Reformat) GetFromFormat() string {
	if x != nil {
		return x.FromFormat
	}
	return ""
}

func (x *Reformat) GetToFormat() string {
	if x != nil {
		return x.ToFormat
	}
	return ""
}

func (x *Reformat) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Grok struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Patterns      []*Pattern             `protobuf:"bytes,1,rep,name=patterns,proto3" json:"patterns,omitempty"`
	Source        string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Where         string                 `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Grok) Reset() {
	*x = Grok{}
	mi := &file_plugins_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Grok) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Grok) ProtoMessage() {}

func (x *Grok) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Grok.ProtoReflect.Descriptor instead.
func (*Grok) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{15}
}

func (x *Grok) GetPatterns() []*Pattern {
	if x != nil {
		return x.Patterns
	}
	return nil
}

func (x *Grok) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Grok) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Pattern struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FieldName     string                 `protobuf:"bytes,1,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	Pattern       string                 `protobuf:"bytes,2,opt,name=pattern,proto3" json:"pattern,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pattern) Reset() {
	*x = Pattern{}
	mi := &file_plugins_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pattern) ProtoMessage() {}

func (x *Pattern) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pattern.ProtoReflect.Descriptor instead.
func (*Pattern) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{16}
}

func (x *Pattern) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *Pattern) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

type Kv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FieldSplit    string                 `protobuf:"bytes,1,opt,name=fieldSplit,proto3" json:"fieldSplit,omitempty"`
	ValueSplit    string                 `protobuf:"bytes,2,opt,name=valueSplit,proto3" json:"valueSplit,omitempty"`
	Source        string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Where         string                 `protobuf:"bytes,4,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Kv) Reset() {
	*x = Kv{}
	mi := &file_plugins_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Kv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kv) ProtoMessage() {}

func (x *Kv) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kv.ProtoReflect.Descriptor instead.
func (*Kv) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{17}
}

func (x *Kv) GetFieldSplit() string {
	if x != nil {
		return x.FieldSplit
	}
	return ""
}

func (x *Kv) GetValueSplit() string {
	if x != nil {
		return x.ValueSplit
	}
	return ""
}

func (x *Kv) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Kv) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Json struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Where         string                 `protobuf:"bytes,2,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Json) Reset() {
	*x = Json{}
	mi := &file_plugins_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Json) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Json) ProtoMessage() {}

func (x *Json) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Json.ProtoReflect.Descriptor instead.
func (*Json) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{18}
}

func (x *Json) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Json) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Expand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Where         string                 `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Expand) Reset() {
	*x = Expand{}
	mi := &file_plugins_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Expand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expand) ProtoMessage() {}

func (x *Expand) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expand.ProtoReflect.Descriptor instead.
func (*Expand) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{19}
}

func (x *Expand) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Expand) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Expand) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Csv struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Source        string                 `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Separator     string                 `protobuf:"bytes,2,opt,name=separator,proto3" json:"separator,omitempty"`
	Headers       []string               `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	Where         string                 `protobuf:"bytes,4,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Csv) Reset() {
	*x = Csv{}
	mi := &file_plugins_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Csv) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Csv) ProtoMessage() {}

func (x *Csv) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Csv.ProtoReflect.Descriptor instead.
func (*Csv) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{20}
}

func (x *Csv) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Csv) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

func (x *Csv) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Csv) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Trim struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Function      string                 `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	Substring     string                 `protobuf:"bytes,2,opt,name=substring,proto3" json:"substring,omitempty"`
	Fields        []string               `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Where         string                 `protobuf:"bytes,4,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trim) Reset() {
	*x = Trim{}
	mi := &file_plugins_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trim) ProtoMessage() {}

func (x *Trim) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trim.ProtoReflect.Descriptor instead.
func (*Trim) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{21}
}

func (x *Trim) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Trim) GetSubstring() string {
	if x != nil {
		return x.Substring
	}
	return ""
}

func (x *Trim) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Trim) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Delete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []string               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	Where         string                 `protobuf:"bytes,2,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Delete) Reset() {
	*x = Delete{}
	mi := &file_plugins_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Delete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delete) ProtoMessage() {}

func (x *Delete) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delete.ProtoReflect.Descriptor instead.
func (*Delete) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{22}
}

func (x *Delete) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Delete) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Rename struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From          []string               `protobuf:"bytes,2,rep,name=from,proto3" json:"from,omitempty"`
	Where         string                 `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Rename) Reset() {
	*x = Rename{}
	mi := &file_plugins_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rename) ProtoMessage() {}

func (x *Rename) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rename.ProtoReflect.Descriptor instead.
func (*Rename) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{23}
}

func (x *Rename) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Rename) GetFrom() []string {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Rename) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Cast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Fields        []string               `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	Where         string                 `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cast) Reset() {
	*x = Cast{}
	mi := &file_plugins_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cast) ProtoMessage() {}

func (x *Cast) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cast.ProtoReflect.Descriptor instead.
func (*Cast) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{24}
}

func (x *Cast) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Cast) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Cast) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Drop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Where         string                 `protobuf:"bytes,1,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Drop) Reset() {
	*x = Drop{}
	mi := &file_plugins_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Drop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Drop) ProtoMessage() {}

func (x *Drop) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Drop.ProtoReflect.Descriptor instead.
func (*Drop) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{25}
}

func (x *Drop) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Add struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Function      string                     `protobuf:"bytes,1,opt,name=function,proto3" json:"function,omitempty"`
	Params        map[string]*structpb.Value `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Where         string                     `protobuf:"bytes,3,opt,name=where,proto3" json:"where,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Add) Reset() {
	*x = Add{}
	mi := &file_plugins_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Add) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Add) ProtoMessage() {}

func (x *Add) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Add.ProtoReflect.Descriptor instead.
func (*Add) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{26}
}

func (x *Add) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *Add) GetParams() map[string]*structpb.Value {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *Add) GetWhere() string {
	if x != nil {
		return x.Where
	}
	return ""
}

type Config struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Pipeline      []*Pipeline                `protobuf:"bytes,1,rep,name=pipeline,proto3" json:"pipeline,omitempty"`
	DisabledRules []uint64                   `protobuf:"varint,2,rep,packed,name=disabledRules,proto3" json:"disabledRules,omitempty"`
	Tenants       []*Tenant                  `protobuf:"bytes,3,rep,name=tenants,proto3" json:"tenants,omitempty"`
	Patterns      map[string]string          `protobuf:"bytes,4,rep,name=patterns,proto3" json:"patterns,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Plugins       map[string]*structpb.Value `protobuf:"bytes,5,rep,name=plugins,proto3" json:"plugins,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Env           *Env                       `protobuf:"bytes,6,opt,name=env,proto3" json:"env,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_plugins_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{27}
}

func (x *Config) GetPipeline() []*Pipeline {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

func (x *Config) GetDisabledRules() []uint64 {
	if x != nil {
		return x.DisabledRules
	}
	return nil
}

func (x *Config) GetTenants() []*Tenant {
	if x != nil {
		return x.Tenants
	}
	return nil
}

func (x *Config) GetPatterns() map[string]string {
	if x != nil {
		return x.Patterns
	}
	return nil
}

func (x *Config) GetPlugins() map[string]*structpb.Value {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *Config) GetEnv() *Env {
	if x != nil {
		return x.Env
	}
	return nil
}

type Tenant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Assets        []*Asset               `protobuf:"bytes,3,rep,name=assets,proto3" json:"assets,omitempty"`
	DisabledRules []uint64               `protobuf:"varint,4,rep,packed,name=disabledRules,proto3" json:"disabledRules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tenant) Reset() {
	*x = Tenant{}
	mi := &file_plugins_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tenant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tenant) ProtoMessage() {}

func (x *Tenant) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tenant.ProtoReflect.Descriptor instead.
func (*Tenant) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{28}
}

func (x *Tenant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tenant) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tenant) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *Tenant) GetDisabledRules() []uint64 {
	if x != nil {
		return x.DisabledRules
	}
	return nil
}

type Asset struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hostnames       []string               `protobuf:"bytes,2,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	Ips             []string               `protobuf:"bytes,3,rep,name=ips,proto3" json:"ips,omitempty"`
	Confidentiality uint32                 `protobuf:"varint,4,opt,name=confidentiality,proto3" json:"confidentiality,omitempty"`
	Availability    uint32                 `protobuf:"varint,5,opt,name=availability,proto3" json:"availability,omitempty"`
	Integrity       uint32                 `protobuf:"varint,6,opt,name=integrity,proto3" json:"integrity,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_plugins_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{29}
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *Asset) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *Asset) GetConfidentiality() uint32 {
	if x != nil {
		return x.Confidentiality
	}
	return 0
}

func (x *Asset) GetAvailability() uint32 {
	if x != nil {
		return x.Availability
	}
	return 0
}

func (x *Asset) GetIntegrity() uint32 {
	if x != nil {
		return x.Integrity
	}
	return 0
}

type Pipeline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DataTypes     []string               `protobuf:"bytes,1,rep,name=dataTypes,proto3" json:"dataTypes,omitempty"`
	Steps         []*Step                `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	mi := &file_plugins_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{30}
}

func (x *Pipeline) GetDataTypes() []string {
	if x != nil {
		return x.DataTypes
	}
	return nil
}

func (x *Pipeline) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

type Env struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeName      string                 `protobuf:"bytes,1,opt,name=nodeName,proto3" json:"nodeName,omitempty"`
	NodeGroups    []string               `protobuf:"bytes,2,rep,name=nodeGroups,proto3" json:"nodeGroups,omitempty"`
	LogLevel      uint32                 `protobuf:"varint,4,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
	Mode          string                 `protobuf:"bytes,5,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Env) Reset() {
	*x = Env{}
	mi := &file_plugins_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{31}
}

func (x *Env) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Env) GetNodeGroups() []string {
	if x != nil {
		return x.NodeGroups
	}
	return nil
}

func (x *Env) GetLogLevel() uint32 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *Env) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type Variable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Get           string                 `protobuf:"bytes,1,opt,name=get,proto3" json:"get,omitempty"`
	As            string                 `protobuf:"bytes,2,opt,name=as,proto3" json:"as,omitempty"`
	OfType        string                 `protobuf:"bytes,3,opt,name=ofType,proto3" json:"ofType,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Variable) Reset() {
	*x = Variable{}
	mi := &file_plugins_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Variable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variable) ProtoMessage() {}

func (x *Variable) ProtoReflect() protoreflect.Message {
	mi := &file_plugins_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Variable.ProtoReflect.Descriptor instead.
func (*Variable) Descriptor() ([]byte, []int) {
	return file_plugins_proto_rawDescGZIP(), []int{32}
}

func (x *Variable) GetGet() string {
	if x != nil {
		return x.Get
	}
	return ""
}

func (x *Variable) GetAs() string {
	if x != nil {
		return x.As
	}
	return ""
}

func (x *Variable) GetOfType() string {
	if x != nil {
		return x.OfType
	}
	return ""
}

var File_plugins_proto protoreflect.FileDescriptor

const file_plugins_proto_rawDesc = "" +
	"\n" +
	"\rplugins.proto\x12\aplugins\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\"h\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\ttimestamp\x18\x02 \x01(\tR\n" +
	"@timestamp\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x1d\n" +
	"\x03Ack\x12\x16\n" +
	"\x06lastId\x18\x01 \x01(\tR\x06lastId\"\xff\x04\n" +
	"\x05Alert\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\ttimestamp\x18\x02 \x01(\tR\n" +
	"@timestamp\x12\x1e\n" +
	"\n" +
	"lastUpdate\x18\x03 \x01(\tR\n" +
	"lastUpdate\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1a\n" +
	"\btenantId\x18\x05 \x01(\tR\btenantId\x12\x1e\n" +
	"\n" +
	"tenantName\x18\x06 \x01(\tR\n" +
	"tenantName\x12\x1e\n" +
	"\n" +
	"dataSource\x18\a \x01(\tR\n" +
	"dataSource\x12\x1a\n" +
	"\bdataType\x18\b \x01(\tR\bdataType\x12\x1a\n" +
	"\bcategory\x18\t \x01(\tR\bcategory\x12\x1c\n" +
	"\ttechnique\x18\n" +
	" \x01(\tR\ttechnique\x12 \n" +
	"\vdescription\x18\v \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"references\x18\f \x03(\tR\n" +
	"references\x12'\n" +
	"\x06impact\x18\r \x01(\v2\x0f.plugins.ImpactR\x06impact\x12 \n" +
	"\vimpactScore\x18\x0e \x01(\rR\vimpactScore\x12\x1a\n" +
	"\bseverity\x18\x0f \x01(\tR\bseverity\x12+\n" +
	"\tadversary\x18\x10 \x01(\v2\r.plugins.SideR\tadversary\x12%\n" +
	"\x06target\x18\x11 \x01(\v2\r.plugins.SideR\x06target\x12&\n" +
	"\x06events\x18\x12 \x03(\v2\x0e.plugins.EventR\x06events\x12$\n" +
	"\rdeduplicateBy\x18\x13 \x03(\tR\rdeduplicateBy\x12\x16\n" +
	"\x06errors\x18\x14 \x03(\tR\x06errors\"t\n" +
	"\x06Impact\x12(\n" +
	"\x0fconfidentiality\x18\x01 \x01(\rR\x0fconfidentiality\x12\x1c\n" +
	"\tintegrity\x18\x02 \x01(\rR\tintegrity\x12\"\n" +
	"\favailability\x18\x03 \x01(\rR\favailability\"\x9b\x06\n" +
	"\x05Event\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\ttimestamp\x18\x02 \x01(\tR\n" +
	"@timestamp\x12\x1e\n" +
	"\n" +
	"deviceTime\x18\x03 \x01(\tR\n" +
	"deviceTime\x12\x1a\n" +
	"\bdataType\x18\x04 \x01(\tR\bdataType\x12\x1e\n" +
	"\n" +
	"dataSource\x18\x05 \x01(\tR\n" +
	"dataSource\x12\x1a\n" +
	"\btenantId\x18\x06 \x01(\tR\btenantId\x12\x1e\n" +
	"\n" +
	"tenantName\x18\a \x01(\tR\n" +
	"tenantName\x12\x10\n" +
	"\x03raw\x18\b \x01(\tR\x03raw\x12)\n" +
	"\x03log\x18\t \x03(\v2\x17.plugins.Event.LogEntryR\x03log\x12%\n" +
	"\x06target\x18\n" +
	" \x01(\v2\r.plugins.SideR\x06target\x12%\n" +
	"\x06origin\x18\v \x01(\v2\r.plugins.SideR\x06origin\x12\x1a\n" +
	"\bprotocol\x18\f \x01(\tR\bprotocol\x12*\n" +
	"\x10connectionStatus\x18\r \x01(\tR\x10connectionStatus\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x0e \x01(\rR\n" +
	"statusCode\x12\"\n" +
	"\factionResult\x18\x0f \x01(\tR\factionResult\x12\x16\n" +
	"\x06action\x18\x10 \x01(\tR\x06action\x12\x1a\n" +
	"\bseverity\x18\x11 \x01(\tR\bseverity\x12\x16\n" +
	"\x06errors\x18\x12 \x03(\tR\x06errors\x12>\n" +
	"\n" +
	"compliance\x18\x13 \x03(\v2\x1e.plugins.Event.ComplianceEntryR\n" +
	"compliance\x1aN\n" +
	"\bLogEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\x1aX\n" +
	"\x0fComplianceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.plugins.ComplianceValuesR\x05value:\x028\x01\"*\n" +
	"\x10ComplianceValues\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"\xcf\x12\n" +
	"\x04Side\x12\x1c\n" +
	"\tbytesSent\x18\x01 \x01(\x01R\tbytesSent\x12$\n" +
	"\rbytesReceived\x18\x02 \x01(\x01R\rbytesReceived\x12\"\n" +
	"\fpackagesSent\x18\x03 \x01(\x04R\fpackagesSent\x12*\n" +
	"\x10packagesReceived\x18\x04 \x01(\x04R\x10packagesReceived\x12\x0e\n" +
	"\x02ip\x18\x05 \x01(\tR\x02ip\x12\x12\n" +
	"\x04host\x18\x06 \x01(\tR\x04host\x12\x12\n" +
	"\x04user\x18\a \x01(\tR\x04user\x12\x14\n" +
	"\x05group\x18\b \x01(\tR\x05group\x12\x12\n" +
	"\x04port\x18\t \x01(\rR\x04port\x12\x16\n" +
	"\x06domain\x18\n" +
	" \x01(\tR\x06domain\x12\x10\n" +
	"\x03mac\x18\v \x01(\tR\x03mac\x126\n" +
	"\vgeolocation\x18\f \x01(\v2\x14.plugins.GeolocationR\vgeolocation\x12\x10\n" +
	"\x03url\x18\r \x01(\tR\x03url\x12\x12\n" +
	"\x04cidr\x18\x0e \x01(\tR\x04cidr\x126\n" +
	"\x16certificateFingerprint\x18\x0f \x01(\tR\x16certificateFingerprint\x12&\n" +
	"\x0eja3Fingerprint\x18\x10 \x01(\tR\x0eja3Fingerprint\x12(\n" +
	"\x0fjarmFingerprint\x18\x11 \x01(\tR\x0fjarmFingerprint\x12\x1c\n" +
	"\tsshBanner\x18\x12 \x01(\tR\tsshBanner\x12&\n" +
	"\x0esshFingerprint\x18\x13 \x01(\tR\x0esshFingerprint\x12\x16\n" +
	"\x06cookie\x18\x14 \x01(\tR\x06cookie\x12\x1a\n" +
	"\bjabberId\x18\x15 \x01(\tR\bjabberId\x12\x14\n" +
	"\x05email\x18\x16 \x01(\tR\x05email\x12\x12\n" +
	"\x04dkim\x18\x17 \x01(\tR\x04dkim\x12$\n" +
	"\rdkimSignature\x18\x18 \x01(\tR\rdkimSignature\x12\"\n" +
	"\femailAddress\x18\x19 \x01(\tR\femailAddress\x12\x1c\n" +
	"\temailBody\x18\x1a \x01(\tR\temailBody\x12*\n" +
	"\x10emailDisplayName\x18\x1b \x01(\tR\x10emailDisplayName\x12\"\n" +
	"\femailSubject\x18\x1c \x01(\tR\femailSubject\x12*\n" +
	"\x10emailThreadIndex\x18\x1d \x01(\tR\x10emailThreadIndex\x12\"\n" +
	"\femailXMailer\x18\x1e \x01(\tR\femailXMailer\x12(\n" +
	"\x0fwhoisRegistrant\x18\x1f \x01(\tR\x0fwhoisRegistrant\x12&\n" +
	"\x0ewhoisRegistrar\x18  \x01(\tR\x0ewhoisRegistrar\x12\x18\n" +
	"\aprocess\x18! \x01(\tR\aprocess\x12\"\n" +
	"\fprocessState\x18\" \x01(\tR\fprocessState\x12\x18\n" +
	"\acommand\x18# \x01(\tR\acommand\x122\n" +
	"\x14windowsScheduledTask\x18$ \x01(\tR\x14windowsScheduledTask\x12<\n" +
	"\x19windowsServiceDisplayName\x18% \x01(\tR\x19windowsServiceDisplayName\x12.\n" +
	"\x12windowsServiceName\x18& \x01(\tR\x12windowsServiceName\x12\x12\n" +
	"\x04file\x18' \x01(\tR\x04file\x12\x12\n" +
	"\x04path\x18( \x01(\tR\x04path\x12\x1a\n" +
	"\bfilename\x18) \x01(\tR\bfilename\x12 \n" +
	"\vsizeInBytes\x18* \x01(\tR\vsizeInBytes\x12\x1a\n" +
	"\bmimeType\x18+ \x01(\tR\bmimeType\x12\x12\n" +
	"\x04hash\x18, \x01(\tR\x04hash\x12\"\n" +
	"\fauthentihash\x18- \x01(\tR\fauthentihash\x12\x16\n" +
	"\x06cdhash\x18. \x01(\tR\x06cdhash\x12\x10\n" +
	"\x03md5\x18/ \x01(\tR\x03md5\x12\x12\n" +
	"\x04sha1\x180 \x01(\tR\x04sha1\x12\x16\n" +
	"\x06sha224\x181 \x01(\tR\x06sha224\x12\x16\n" +
	"\x06sha256\x182 \x01(\tR\x06sha256\x12\x16\n" +
	"\x06sha384\x183 \x01(\tR\x06sha384\x12\x18\n" +
	"\asha3224\x184 \x01(\tR\asha3224\x12\x18\n" +
	"\asha3256\x185 \x01(\tR\asha3256\x12\x18\n" +
	"\asha3384\x186 \x01(\tR\asha3384\x12\x18\n" +
	"\asha3512\x187 \x01(\tR\asha3512\x12\x16\n" +
	"\x06sha512\x188 \x01(\tR\x06sha512\x12\x1c\n" +
	"\tsha512224\x189 \x01(\tR\tsha512224\x12\x1c\n" +
	"\tsha512256\x18: \x01(\tR\tsha512256\x12\x10\n" +
	"\x03hex\x18; \x01(\tR\x03hex\x12\x16\n" +
	"\x06base64\x18< \x01(\tR\x06base64\x12(\n" +
	"\x0foperatingSystem\x18= \x01(\tR\x0foperatingSystem\x12(\n" +
	"\x0fchromeExtension\x18> \x01(\tR\x0fchromeExtension\x12 \n" +
	"\vmobileAppId\x18? \x01(\tR\vmobileAppId\x12\x10\n" +
	"\x03cpe\x18@ \x01(\tR\x03cpe\x12\x10\n" +
	"\x03cve\x18A \x01(\tR\x03cve\x12\x18\n" +
	"\amalware\x18B \x01(\tR\amalware\x12$\n" +
	"\rmalwareFamily\x18C \x01(\tR\rmalwareFamily\x12 \n" +
	"\vmalwareType\x18D \x01(\tR\vmalwareType\x12$\n" +
	"\rpgpPrivateKey\x18E \x01(\tR\rpgpPrivateKey\x12\"\n" +
	"\fpgpPublicKey\x18F \x01(\tR\fpgpPublicKey\x12 \n" +
	"\vconnections\x18G \x01(\x04R\vconnections\x12&\n" +
	"\x0eusedCpuPercent\x18H \x01(\rR\x0eusedCpuPercent\x12&\n" +
	"\x0eusedMemPercent\x18I \x01(\rR\x0eusedMemPercent\x12$\n" +
	"\rtotalCpuUnits\x18J \x01(\rR\rtotalCpuUnits\x12\x1a\n" +
	"\btotalMem\x18K \x01(\x04R\btotalMem\x12'\n" +
	"\x05disks\x18L \x03(\v2\x11.plugins.DiskInfoR\x05disks\"`\n" +
	"\bDiskInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"totalSpace\x18\x02 \x01(\x04R\n" +
	"totalSpace\x12 \n" +
	"\vusedPercent\x18\x03 \x01(\rR\vusedPercent\"\xd7\x01\n" +
	"\vGeolocation\x12\x18\n" +
	"\acountry\x18\x01 \x01(\tR\acountry\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x01R\tlongitude\x12\x10\n" +
	"\x03asn\x18\x05 \x01(\x04R\x03asn\x12\x10\n" +
	"\x03aso\x18\x06 \x01(\tR\x03aso\x12 \n" +
	"\vcountryCode\x18\a \x01(\tR\vcountryCode\x12\x1a\n" +
	"\baccuracy\x18\b \x01(\rR\baccuracy\"\x9e\x01\n" +
	"\x03Log\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bdataType\x18\x02 \x01(\tR\bdataType\x12\x1e\n" +
	"\n" +
	"dataSource\x18\x03 \x01(\tR\n" +
	"dataSource\x12\x1d\n" +
	"\ttimestamp\x18\x04 \x01(\tR\n" +
	"@timestamp\x12\x1a\n" +
	"\btenantId\x18\x05 \x01(\tR\btenantId\x12\x10\n" +
	"\x03raw\x18\x06 \x01(\tR\x03raw\"u\n" +
	"\x05Draft\x12\x10\n" +
	"\x03log\x18\x01 \x01(\tR\x03log\x12\x12\n" +
	"\x04logs\x18\x02 \x03(\tR\x04logs\x12\x12\n" +
	"\x04step\x18\x03 \x01(\rR\x04step\x12\x1a\n" +
	"\bpipeline\x18\x04 \x01(\rR\bpipeline\x12\x16\n" +
	"\x06errors\x18\x05 \x03(\tR\x06errors\"T\n" +
	"\tTransform\x12$\n" +
	"\x05draft\x18\x01 \x01(\v2\x0e.plugins.DraftR\x05draft\x12!\n" +
	"\x04step\x18\x02 \x01(\v2\r.plugins.StepR\x04step\"\xe8\x03\n" +
	"\x04Step\x12\x1b\n" +
	"\x02kv\x18\x01 \x01(\v2\v.plugins.KvR\x02kv\x12!\n" +
	"\x04grok\x18\x02 \x01(\v2\r.plugins.GrokR\x04grok\x12!\n" +
	"\x04trim\x18\x03 \x01(\v2\r.plugins.TrimR\x04trim\x12!\n" +
	"\x04json\x18\x04 \x01(\v2\r.plugins.JsonR\x04json\x12\x1e\n" +
	"\x03csv\x18\x05 \x01(\v2\f.plugins.CsvR\x03csv\x12'\n" +
	"\x06rename\x18\x06 \x01(\v2\x0f.plugins.RenameR\x06rename\x12!\n" +
	"\x04cast\x18\a \x01(\v2\r.plugins.CastR\x04cast\x12-\n" +
	"\breformat\x18\b \x01(\v2\x11.plugins.ReformatR\breformat\x12'\n" +
	"\x06delete\x18\t \x01(\v2\x0f.plugins.DeleteR\x06delete\x12!\n" +
	"\x04drop\x18\n" +
	" \x01(\v2\r.plugins.DropR\x04drop\x12\x1e\n" +
	"\x03add\x18\v \x01(\v2\f.plugins.AddR\x03add\x12*\n" +
	"\adynamic\x18\f \x01(\v2\x10.plugins.DynamicR\adynamic\x12'\n" +
	"\x06expand\x18\r \x01(\v2\x0f.plugins.ExpandR\x06expand\"\xc0\x01\n" +
	"\aDynamic\x12\x16\n" +
	"\x06plugin\x18\x01 \x01(\tR\x06plugin\x124\n" +
	"\x06params\x18\x02 \x03(\v2\x1c.plugins.Dynamic.ParamsEntryR\x06params\x12\x14\n" +
	"\x05where\x18\x03 \x01(\tR\x05where\x1aQ\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"\x90\x01\n" +
	"\bReformat\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x1a\n" +
	"\bfunction\x18\x02 \x01(\tR\bfunction\x12\x1e\n" +
	"\n" +
	"fromFormat\x18\x03 \x01(\tR\n" +
	"fromFormat\x12\x1a\n" +
	"\btoFormat\x18\x04 \x01(\tR\btoFormat\x12\x14\n" +
	"\x05where\x18\x05 \x01(\tR\x05where\"b\n" +
	"\x04Grok\x12,\n" +
	"\bpatterns\x18\x01 \x03(\v2\x10.plugins.PatternR\bpatterns\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x14\n" +
	"\x05where\x18\x03 \x01(\tR\x05where\"A\n" +
	"\aPattern\x12\x1c\n" +
	"\tfieldName\x18\x01 \x01(\tR\tfieldName\x12\x18\n" +
	"\apattern\x18\x02 \x01(\tR\apattern\"r\n" +
	"\x02Kv\x12\x1e\n" +
	"\n" +
	"fieldSplit\x18\x01 \x01(\tR\n" +
	"fieldSplit\x12\x1e\n" +
	"\n" +
	"valueSplit\x18\x02 \x01(\tR\n" +
	"valueSplit\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x14\n" +
	"\x05where\x18\x04 \x01(\tR\x05where\"4\n" +
	"\x04Json\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x14\n" +
	"\x05where\x18\x02 \x01(\tR\x05where\"F\n" +
	"\x06Expand\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12\x14\n" +
	"\x05where\x18\x03 \x01(\tR\x05where\"k\n" +
	"\x03Csv\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12\x1c\n" +
	"\tseparator\x18\x02 \x01(\tR\tseparator\x12\x18\n" +
	"\aheaders\x18\x03 \x03(\tR\aheaders\x12\x14\n" +
	"\x05where\x18\x04 \x01(\tR\x05where\"n\n" +
	"\x04Trim\x12\x1a\n" +
	"\bfunction\x18\x01 \x01(\tR\bfunction\x12\x1c\n" +
	"\tsubstring\x18\x02 \x01(\tR\tsubstring\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12\x14\n" +
	"\x05where\x18\x04 \x01(\tR\x05where\"6\n" +
	"\x06Delete\x12\x16\n" +
	"\x06fields\x18\x01 \x03(\tR\x06fields\x12\x14\n" +
	"\x05where\x18\x02 \x01(\tR\x05where\"B\n" +
	"\x06Rename\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x12\n" +
	"\x04from\x18\x02 \x03(\tR\x04from\x12\x14\n" +
	"\x05where\x18\x03 \x01(\tR\x05where\"D\n" +
	"\x04Cast\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x16\n" +
	"\x06fields\x18\x02 \x03(\tR\x06fields\x12\x14\n" +
	"\x05where\x18\x03 \x01(\tR\x05where\"\x1c\n" +
	"\x04Drop\x12\x14\n" +
	"\x05where\x18\x01 \x01(\tR\x05where\"\xbc\x01\n" +
	"\x03Add\x12\x1a\n" +
	"\bfunction\x18\x01 \x01(\tR\bfunction\x120\n" +
	"\x06params\x18\x02 \x03(\v2\x18.plugins.Add.ParamsEntryR\x06params\x12\x14\n" +
	"\x05where\x18\x03 \x01(\tR\x05where\x1aQ\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"\xac\x03\n" +
	"\x06Config\x12-\n" +
	"\bpipeline\x18\x01 \x03(\v2\x11.plugins.PipelineR\bpipeline\x12$\n" +
	"\rdisabledRules\x18\x02 \x03(\x04R\rdisabledRules\x12)\n" +
	"\atenants\x18\x03 \x03(\v2\x0f.plugins.TenantR\atenants\x129\n" +
	"\bpatterns\x18\x04 \x03(\v2\x1d.plugins.Config.PatternsEntryR\bpatterns\x126\n" +
	"\aplugins\x18\x05 \x03(\v2\x1c.plugins.Config.PluginsEntryR\aplugins\x12\x1e\n" +
	"\x03env\x18\x06 \x01(\v2\f.plugins.EnvR\x03env\x1a;\n" +
	"\rPatternsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aR\n" +
	"\fPluginsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"z\n" +
	"\x06Tenant\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12&\n" +
	"\x06assets\x18\x03 \x03(\v2\x0e.plugins.AssetR\x06assets\x12$\n" +
	"\rdisabledRules\x18\x04 \x03(\x04R\rdisabledRules\"\xb7\x01\n" +
	"\x05Asset\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\thostnames\x18\x02 \x03(\tR\thostnames\x12\x10\n" +
	"\x03ips\x18\x03 \x03(\tR\x03ips\x12(\n" +
	"\x0fconfidentiality\x18\x04 \x01(\rR\x0fconfidentiality\x12\"\n" +
	"\favailability\x18\x05 \x01(\rR\favailability\x12\x1c\n" +
	"\tintegrity\x18\x06 \x01(\rR\tintegrity\"M\n" +
	"\bPipeline\x12\x1c\n" +
	"\tdataTypes\x18\x01 \x03(\tR\tdataTypes\x12#\n" +
	"\x05steps\x18\x02 \x03(\v2\r.plugins.StepR\x05steps\"q\n" +
	"\x03Env\x12\x1a\n" +
	"\bnodeName\x18\x01 \x01(\tR\bnodeName\x12\x1e\n" +
	"\n" +
	"nodeGroups\x18\x02 \x03(\tR\n" +
	"nodeGroups\x12\x1a\n" +
	"\blogLevel\x18\x04 \x01(\rR\blogLevel\x12\x12\n" +
	"\x04mode\x18\x05 \x01(\tR\x04mode\"D\n" +
	"\bVariable\x12\x10\n" +
	"\x03get\x18\x01 \x01(\tR\x03get\x12\x0e\n" +
	"\x02as\x18\x02 \x01(\tR\x02as\x12\x16\n" +
	"\x06ofType\x18\x03 \x01(\tR\x06ofType2_\n" +
	"\x06Engine\x12'\n" +
	"\x05Input\x12\f.plugins.Log\x1a\f.plugins.Ack(\x010\x01\x12,\n" +
	"\x06Notify\x12\x10.plugins.Message\x1a\f.plugins.Ack(\x010\x0129\n" +
	"\aParsing\x12.\n" +
	"\bParseLog\x12\x12.plugins.Transform\x1a\x0e.plugins.Draft27\n" +
	"\bAnalysis\x12+\n" +
	"\aAnalyze\x12\x0e.plugins.Event\x1a\x0e.plugins.Alert0\x012B\n" +
	"\vCorrelation\x123\n" +
	"\tCorrelate\x12\x0e.plugins.Alert\x1a\x16.google.protobuf.Empty2B\n" +
	"\fNotification\x122\n" +
	"\x06Notify\x12\x10.plugins.Message\x1a\x16.google.protobuf.Empty2;\n" +
	"\vIntegration\x12,\n" +
	"\n" +
	"ProcessLog\x12\f.plugins.Log\x1a\f.plugins.Ack(\x010\x012v\n" +
	"\x06Output\x125\n" +
	"\vEventOutput\x12\x0e.plugins.Event\x1a\x16.google.protobuf.Empty\x125\n" +
	"\vAlertOutput\x12\x0e.plugins.Alert\x1a\x16.google.protobuf.EmptyB'Z%github.com/threatwinds/go-sdk/pluginsP\x00P\x01b\x06proto3"

var (
	file_plugins_proto_rawDescOnce sync.Once
	file_plugins_proto_rawDescData []byte
)

func file_plugins_proto_rawDescGZIP() []byte {
	file_plugins_proto_rawDescOnce.Do(func() {
		file_plugins_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plugins_proto_rawDesc), len(file_plugins_proto_rawDesc)))
	})
	return file_plugins_proto_rawDescData
}

var file_plugins_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_plugins_proto_goTypes = []any{
	(*Message)(nil),          // 0: plugins.Message
	(*Ack)(nil),              // 1: plugins.Ack
	(*Alert)(nil),            // 2: plugins.Alert
	(*Impact)(nil),           // 3: plugins.Impact
	(*Event)(nil),            // 4: plugins.Event
	(*ComplianceValues)(nil), // 5: plugins.ComplianceValues
	(*Side)(nil),             // 6: plugins.Side
	(*DiskInfo)(nil),         // 7: plugins.DiskInfo
	(*Geolocation)(nil),      // 8: plugins.Geolocation
	(*Log)(nil),              // 9: plugins.Log
	(*Draft)(nil),            // 10: plugins.Draft
	(*Transform)(nil),        // 11: plugins.Transform
	(*Step)(nil),             // 12: plugins.Step
	(*Dynamic)(nil),          // 13: plugins.Dynamic
	(*Reformat)(nil),         // 14: plugins.Reformat
	(*Grok)(nil),             // 15: plugins.Grok
	(*Pattern)(nil),          // 16: plugins.Pattern
	(*Kv)(nil),               // 17: plugins.Kv
	(*Json)(nil),             // 18: plugins.Json
	(*Expand)(nil),           // 19: plugins.Expand
	(*Csv)(nil),              // 20: plugins.Csv
	(*Trim)(nil),             // 21: plugins.Trim
	(*Delete)(nil),           // 22: plugins.Delete
	(*Rename)(nil),           // 23: plugins.Rename
	(*Cast)(nil),             // 24: plugins.Cast
	(*Drop)(nil),             // 25: plugins.Drop
	(*Add)(nil),              // 26: plugins.Add
	(*Config)(nil),           // 27: plugins.Config
	(*Tenant)(nil),           // 28: plugins.Tenant
	(*Asset)(nil),            // 29: plugins.Asset
	(*Pipeline)(nil),         // 30: plugins.Pipeline
	(*Env)(nil),              // 31: plugins.Env
	(*Variable)(nil),         // 32: plugins.Variable
	nil,                      // 33: plugins.Event.LogEntry
	nil,                      // 34: plugins.Event.ComplianceEntry
	nil,                      // 35: plugins.Dynamic.ParamsEntry
	nil,                      // 36: plugins.Add.ParamsEntry
	nil,                      // 37: plugins.Config.PatternsEntry
	nil,                      // 38: plugins.Config.PluginsEntry
	(*structpb.Value)(nil),   // 39: google.protobuf.Value
	(*emptypb.Empty)(nil),    // 40: google.protobuf.Empty
}
var file_plugins_proto_depIdxs = []int32{
	3,  // 0: plugins.Alert.impact:type_name -> plugins.Impact
	6,  // 1: plugins.Alert.adversary:type_name -> plugins.Side
	6,  // 2: plugins.Alert.target:type_name -> plugins.Side
	4,  // 3: plugins.Alert.events:type_name -> plugins.Event
	33, // 4: plugins.Event.log:type_name -> plugins.Event.LogEntry
	6,  // 5: plugins.Event.target:type_name -> plugins.Side
	6,  // 6: plugins.Event.origin:type_name -> plugins.Side
	34, // 7: plugins.Event.compliance:type_name -> plugins.Event.ComplianceEntry
	8,  // 8: plugins.Side.geolocation:type_name -> plugins.Geolocation
	7,  // 9: plugins.Side.disks:type_name -> plugins.DiskInfo
	10, // 10: plugins.Transform.draft:type_name -> plugins.Draft
	12, // 11: plugins.Transform.step:type_name -> plugins.Step
	17, // 12: plugins.Step.kv:type_name -> plugins.Kv
	15, // 13: plugins.Step.grok:type_name -> plugins.Grok
	21, // 14: plugins.Step.trim:type_name -> plugins.Trim
	18, // 15: plugins.Step.json:type_name -> plugins.Json
	20, // 16: plugins.Step.csv:type_name -> plugins.Csv
	23, // 17: plugins.Step.rename:type_name -> plugins.Rename
	24, // 18: plugins.Step.cast:type_name -> plugins.Cast
	14, // 19: plugins.Step.reformat:type_name -> plugins.Reformat
	22, // 20: plugins.Step.delete:type_name -> plugins.Delete
	25, // 21: plugins.Step.drop:type_name -> plugins.Drop
	26, // 22: plugins.Step.add:type_name -> plugins.Add
	13, // 23: plugins.Step.dynamic:type_name -> plugins.Dynamic
	19, // 24: plugins.Step.expand:type_name -> plugins.Expand
	35, // 25: plugins.Dynamic.params:type_name -> plugins.Dynamic.ParamsEntry
	16, // 26: plugins.Grok.patterns:type_name -> plugins.Pattern
	36, // 27: plugins.Add.params:type_name -> plugins.Add.ParamsEntry
	30, // 28: plugins.Config.pipeline:type_name -> plugins.Pipeline
	28, // 29: plugins.Config.tenants:type_name -> plugins.Tenant
	37, // 30: plugins.Config.patterns:type_name -> plugins.Config.PatternsEntry
	38, // 31: plugins.Config.plugins:type_name -> plugins.Config.PluginsEntry
	31, // 32: plugins.Config.env:type_name -> plugins.Env
	29, // 33: plugins.Tenant.assets:type_name -> plugins.Asset
	12, // 34: plugins.Pipeline.steps:type_name -> plugins.Step
	39, // 35: plugins.Event.LogEntry.value:type_name -> google.protobuf.Value
	5,  // 36: plugins.Event.ComplianceEntry.value:type_name -> plugins.ComplianceValues
	39, // 37: plugins.Dynamic.ParamsEntry.value:type_name -> google.protobuf.Value
	39, // 38: plugins.Add.ParamsEntry.value:type_name -> google.protobuf.Value
	39, // 39: plugins.Config.PluginsEntry.value:type_name -> google.protobuf.Value
	9,  // 40: plugins.Engine.Input:input_type -> plugins.Log
	0,  // 41: plugins.Engine.Notify:input_type -> plugins.Message
	11, // 42: plugins.Parsing.ParseLog:input_type -> plugins.Transform
	4,  // 43: plugins.Analysis.Analyze:input_type -> plugins.Event
	2,  // 44: plugins.Correlation.Correlate:input_type -> plugins.Alert
	0,  // 45: plugins.Notification.Notify:input_type -> plugins.Message
	9,  // 46: plugins.Integration.ProcessLog:input_type -> plugins.Log
	4,  // 47: plugins.Output.EventOutput:input_type -> plugins.Event
	2,  // 48: plugins.Output.AlertOutput:input_type -> plugins.Alert
	1,  // 49: plugins.Engine.Input:output_type -> plugins.Ack
	1,  // 50: plugins.Engine.Notify:output_type -> plugins.Ack
	10, // 51: plugins.Parsing.ParseLog:output_type -> plugins.Draft
	2,  // 52: plugins.Analysis.Analyze:output_type -> plugins.Alert
	40, // 53: plugins.Correlation.Correlate:output_type -> google.protobuf.Empty
	40, // 54: plugins.Notification.Notify:output_type -> google.protobuf.Empty
	1,  // 55: plugins.Integration.ProcessLog:output_type -> plugins.Ack
	40, // 56: plugins.Output.EventOutput:output_type -> google.protobuf.Empty
	40, // 57: plugins.Output.AlertOutput:output_type -> google.protobuf.Empty
	49, // [49:58] is the sub-list for method output_type
	40, // [40:49] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_plugins_proto_init() }
func file_plugins_proto_init() {
	if File_plugins_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plugins_proto_rawDesc), len(file_plugins_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_plugins_proto_goTypes,
		DependencyIndexes: file_plugins_proto_depIdxs,
		MessageInfos:      file_plugins_proto_msgTypes,
	}.Build()
	File_plugins_proto = out.File
	file_plugins_proto_goTypes = nil
	file_plugins_proto_depIdxs = nil
}
